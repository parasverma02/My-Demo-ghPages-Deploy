{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","posts","componentDidMount","fetch","then","response","json","responseData","postsData","map","data","show","setState","handleCollapsible","id","singleData","postData","this","className","onClick","title","body","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAmEeA,E,4MA7DXC,MAAQ,CACJC,MAAO,I,EAGXC,kBAAoB,WAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAMC,EAAYD,EAAaE,KAAI,SAAAC,GAC/B,OAAO,2BACAA,GADP,IAEIC,MAAM,OAGd,EAAKC,SAAS,CAAEX,MAAOO,Q,EAOnCK,kBAAoB,SAACC,GACjB,IAAIN,EAAS,YAAO,EAAKR,MAAMC,OAC/BO,EAAYA,EAAUC,KAAI,SAAAC,GACtB,IAAMK,EAAU,eAAQL,GAKxB,OAJIK,EAAWD,KAAOA,IAClBC,EAAWJ,MAAQI,EAAWJ,MAG3BI,KAGX,EAAKH,SAAS,CAAEX,MAAOO,K,4CAI3B,WAAU,IAAD,OACCQ,EACFC,KAAKjB,MAAMC,MAAMQ,KAAI,SAAAC,GAAI,OACrB,sBAAKQ,UAAU,cAAf,UACI,wBACIA,UAAWR,EAAKC,KAAM,4BAA8B,qBACpDQ,QAAS,kBAAM,EAAKN,kBAAkBH,EAAKI,KAC3CA,GAAIJ,EAAKI,GAHb,SAGkBJ,EAAKU,QACvB,qBAAKF,UAAWR,EAAKC,KAAO,mBAAqB,UAAjD,SACI,4BAAID,EAAKW,WANiBX,EAAKI,OAY/C,OACI,qBAAKI,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SACKF,U,GAxDHM,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ffd9812e.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n\n\nclass App extends Component {\n\n    state = {\n        posts: [],\n\n    }\n    componentDidMount = () => {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then(response => response.json())\n            .then(responseData => {\n                const postsData = responseData.map(data => {\n                    return {\n                        ...data,\n                        show: false\n                    };\n                })\n                this.setState({ posts: postsData });\n\n            }\n            );\n\n    }\n\n    handleCollapsible = (id) => {\n        let postsData = [...this.state.posts];\n        postsData = postsData.map(data => {\n            const singleData = { ...data };\n            if (singleData.id === id) {\n                singleData.show = !singleData.show;\n            }\n\n            return singleData\n        })\n\n        this.setState({ posts: postsData })\n\n\n    }\n    render() {\n        const postData =\n            this.state.posts.map(data => (\n                <div className='collapsible' key={data.id}>\n                    <button \n                        className={data.show? 'collapsible-button active' : 'collapsible-button'} \n                        onClick={() => this.handleCollapsible(data.id)} \n                        id={data.id}>{data.title}</button>\n                    <div className={data.show ? 'collapsible-data' : 'display'}>\n                        <p>{data.body}</p>\n                    </div>\n                </div>\n\n            )\n            )\n        return (\n            <div className='Container'>\n                <div className='ListBody'>\n                    {postData}\n                </div>\n            </div>\n        )\n\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}